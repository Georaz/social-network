{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","images/avatar.png","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onChange","e","currentTarget","value","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","style","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","classes","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","descriptionWrapper","src","photos","large","userPhoto","mainPhoto","target","files","length","initialValues","formData","then","Post","post","avatar","width","height","alt","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","Field","name","component","validate","required","MyPosts","postsElements","posts","id","postsWrapper","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","React","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.41d511d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentHeader\":\"ProfileInfo_contentHeader__3cXen\",\"descriptionWrapper\":\"ProfileInfo_descriptionWrapper__-ZXSP\",\"mainPhoto\":\"ProfileInfo_mainPhoto__1i2M9\",\"contact\":\"ProfileInfo_contact__2Ez3Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsWrapper\":\"MyPosts_postsWrapper__gOSSV\",\"posts\":\"MyPosts_posts__9GMrR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1Dldh\"};","import React, {useEffect, useState} from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n       setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                {!editMode &&\r\n                    <div>\r\n                        <b>Status:</b><span onDoubleClick={activateEditMode}>{props.status || \"Статус не указан\"}</span>\r\n                    </div>\r\n                }\r\n                {editMode &&\r\n                    <div>\r\n                        <input\r\n                            autoFocus={true}\r\n                            onChange={onStatusChange}\r\n                            onBlur={deactivateEditMode}\r\n                            value={status} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n        <div><button>Save</button></div>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>Full name:</b>\r\n            {createField(\"Full name\", \"fullName\", Input, [])}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job:</b>\r\n            {createField(\"\", \"lookingForAJob\", Input, [], {type: \"checkbox\"})}\r\n        </div>\r\n\r\n        <div>\r\n            <b>My professional skills:</b>\r\n            {createField(\"My professional skills\", \"lookingForAJobDescription\", Textarea, [])}\r\n        </div>\r\n        <div>\r\n            <b>About me:</b>\r\n            {createField(\"About me\", \"aboutMe\", Textarea, [])}\r\n        </div>\r\n        <div>\r\n            <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={classes.contact}>\r\n                    <b>{key}: {createField(key, \"contacts.\" + key, Input, [])}</b>\r\n                </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../images/userAvatar.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n      return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false)\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.descriptionWrapper}>\r\n                <img src={profile.photos.large || userPhoto} className={classes.mainPhoto}/>\r\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n                    : <ProfileData goToEditMode={() => {setEditMode(true)}} profile={profile} isOwner={isOwner} />}\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return(\r\n        <div>\r\n            {isOwner && <div><button onClick={goToEditMode}>Edit</button></div>}\r\n            <div>\r\n                <b>Full name:</b> {profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job:</b> {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n            <div>\r\n                <b>My professional skills:</b> {profile.lookingForAJobDescription}\r\n            </div>\r\n            }\r\n            <div>\r\n                <b>About me:</b> {profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n            })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={classes.contact}><b>{contactTitle}:</b> {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","export default __webpack_public_path__ + \"static/media/avatar.d100ab7e.png\";","import React from 'react';\r\nimport classes from './Post.module.css';\r\nimport avatar from '../../../../images/avatar.png';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={classes.post}>\r\n            <img src={avatar} width=\"60\" height=\"60\" alt=\"\" />\r\n                {props.message}\r\n            <div>\r\n                <span>likes: </span>\r\n                {props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postsElements = props.posts.map(post => <Post key={post.id}\r\n                                                      message={post.message}\r\n                                                      likesCount={post.likesCount}\r\n                                                      id={post.id}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.postsWrapper}>\r\n            <h2>My posts</h2>\r\n                <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            <div className={classes.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newPostText\" component={Textarea} validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                savePhoto={props.savePhoto}\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                saveProfile={props.saveProfile}\r\n                updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}