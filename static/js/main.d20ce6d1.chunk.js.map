{"version":3,"sources":["images/userAvatar.png","api/api.js","redux/dialogs-reducer.js","components/common/FormsControls/FormsControls.js","components/Navbar/Navbar.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.js","redux/users-selectors.js","components/Users/UsersContainer.jsx","images/grn.svg","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/Navbar/Navbar.module.css","images/spin.svg","components/common/Preloader/Preloader.js","components/Header/Header.module.css","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/common/Paginator/Paginator.module.css","redux/profile-reducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaURL","SEND_MESSAGE","initialState","messages","id","message","dialogs","name","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","FormControl","input","meta","touched","error","children","hasError","className","classes","formControl","Textarea","props","restProps","child","Input","createField","placeholder","component","validators","text","Fragment","validate","Navbar","nav","to","activeClassName","active","updateObjectInArray","items","itemId","objPropName","newObjProps","map","user","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","page","cn","selectedPage","pageNumber","e","User","src","photos","small","userPhoto","width","height","alt","disabled","some","Users","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","bind","totalCount","Header","header","logoWrapper","logo","loginBlock","isAuth","logOut","logIn","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","captchaURL","setAuthUserData","payload","getAuthUserData","captchaUrl","url","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","required","formSummaryError","length","stopSubmit","_error","INITIALIZED_SUCCESS","initialized","globalError","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","messagesPage","sidebar","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","catchAllUnhandledErrors","reason","promise","alert","initializeApp","addEventListener","removeEventListener","exact","path","render","AppContainer","withRouter","Promise","all","GRApp","ReactDOM","document","getElementById","module","exports","preloader","value","maxLengthCreator","maxLength","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","posts","likesCount","addPostActionCreator","newPostText","setStatus","getUserProfile","file","getState","reject","newPost","postId"],"mappings":"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","file":"static/js/main.d20ce6d1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/userAvatar.e582e4ba.png\";","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '18de538a-0af5-4877-87aa-16401c438e9a'\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn(\"Obsolent method. Use profileAPI object\");\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status});\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile);\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false, captcha = \"\") {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaURL() {\r\n        return instance.get(`security/get-captcha-url`);\r\n    }\r\n}","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, message: 'Hallo'},\r\n        {id: 1, message: 'Was ist das?'},\r\n        {id: 1, message: 'Willkommen'}\r\n    ],\r\n    dialogs: [\r\n        {id: 1, name: 'George'},\r\n        {id: 2, name: 'Anna'},\r\n        {id: 3, name: 'Nick'},\r\n        {id: 4, name: 'Julia'},\r\n        {id: 5, name: 'Alex'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\nexport default dialogsReducer;","import React from \"react\";\r\nimport classes from \"./FormsControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={classes.formControl + \" \" + (hasError ? classes.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (className, placeholder, name, component, validators, id = \"\", props = {}, text = \"\") => (\r\n    <React.Fragment>\r\n        <Field className={className} placeholder={placeholder} name={name} component={component} validate={validators} id={id}\r\n               {...props} />{text}\r\n    </React.Fragment>\r\n)","import React from 'react';\r\nimport classes from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <ul>\r\n                <li><NavLink to=\"/profile\" activeClassName={classes.active}>Profile</NavLink></li>\r\n                <li><NavLink to=\"/dialogs\" activeClassName={classes.active}>Messages</NavLink></li>\r\n                <li><NavLink to=\"/users\" activeClassName={classes.active}>Users</NavLink></li>\r\n                <li><NavLink to=\"/news\" activeClassName={classes.active}>News</NavLink></li>\r\n                <li><NavLink to=\"/music\" activeClassName={classes.active}>Music</NavLink></li>\r\n                <li><NavLink to=\"/settings\" activeClassName={classes.active}>Settings</NavLink></li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n\r\n    return items.map(user => {\r\n        if (user[objPropName] === itemId) {\r\n            return {...user, ...newObjProps}\r\n        }\r\n        return user;\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 15,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setUsersTotalCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setUsersTotalCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport classes from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={classes.paginator}>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => {setPortionNumber(portionNumber - 1)}}>PREV</button>}\r\n\r\n            {\r\n                pages\r\n                    .filter(page => page >= leftPortionPageNumber && page <= rightPortionPageNumber)\r\n                    .map(page => {\r\n                        return <span className={ cn({\r\n                            [classes.selectedPage]: currentPage === page\r\n                        }, classes.pageNumber) }\r\n                                     key={page}\r\n                                     onClick={(e) => {\r\n                                         onPageChanged(page);\r\n                                     }}>{page}</span>\r\n                    })}\r\n            { portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport classes from \"./Users.module.css\";\r\nimport userPhoto from \"../../images/userAvatar.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div>\r\n                        <span>\r\n                            <div>\r\n                                <NavLink to={'/profile/' + user.id}>\r\n                                <img src={user.photos.small !== null ? user.photos.small : userPhoto}\r\n                                     className={classes.userPhoto}\r\n                                     width=\"100\" height=\"102\" alt=\"\"/>\r\n                                </NavLink>\r\n                            </div>\r\n                            <div>\r\n                                {user.followed\r\n                                    ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                              onClick={() => {\r\n                                                  unfollow(user.id)\r\n                                              }}\r\n                                    >Unfollow</button>\r\n\r\n                                    : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                              onClick={() => {\r\n                                                  follow(user.id)\r\n                                              }}\r\n                                    >Follow</button>}\r\n                            </div>\r\n                        </span>\r\n            <span>\r\n                            <span>\r\n                                <div>\r\n                                    {user.name}\r\n                                </div>\r\n                                <div>\r\n                                    {user.status}\r\n                                </div>\r\n                            </span>\r\n                            <span>\r\n                                <div>\r\n                                    {'user.location.country'}\r\n                                </div>\r\n                                <div>\r\n                                    {'user.location.city'}\r\n                                </div>\r\n                            </span>\r\n                        </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator.jsx\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={currentPage} totalItemsCount={totalUsersCount}\r\n                       pageSize={pageSize} onPageChanged={onPageChanged}/>\r\n            <div>\r\n            {\r\n                users.map(user => <User\r\n                    user={user}\r\n                    key={user.id}\r\n                    followingInProgress={props.followingInProgress}\r\n                    unfollow={props.unfollow}\r\n                    follow={props.follow} />)\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n    return users.filter(user => true);\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\n\r\n","import {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    requestUsers,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    unfollow\r\n} from \"../../redux/users-reducer\";\r\nimport React from \"react\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getFollowingInProgress, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    //withAuthRedirect,\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers}\r\n    ))(UsersContainer);","export default __webpack_public_path__ + \"static/media/grn.a8f57a1e.svg\";","import React from 'react';\r\nimport classes from './Header.module.css';\r\nimport logo from '../../images/grn.svg';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <div className={classes.logoWrapper}>\r\n                <img src={logo} width=\"250\" height=\"75\" alt=\"\" />\r\n            </div>\r\n            <div className={classes.loginBlock}>\r\n                { props.isAuth\r\n                    ? <div>{props.login}&#8195;<button className={classes.logOut} onClick={props.logout}>Log out</button></div>\r\n                    : <NavLink className={classes.logIn} to={'/login'}>Log in</NavLink> }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'gr-network/auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'gr-network/auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaURL: null // if null, then captcha is not required\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getCaptchaUrlSuccess = (captchaURL) => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS,\r\n    payload: {captchaURL}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaURL());\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const getCaptchaURL = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaURL();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport classes from \"../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaURL}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", Input, [required])}\r\n            {createField(\"Password\", \"password\", Input, [required], \"\",{type: \"password\"})}\r\n            {createField(null, \"rememberMe\", Input, [], \"\", {type: \"checkbox\"}, \"remember me\")}\r\n\r\n            {captchaURL && <img src={captchaURL} />}\r\n            {captchaURL && createField(\"Symbols from an image\", \"captcha\", Input, [required])}\r\n\r\n            {error && <div className={classes.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaURL={props.captchaURL} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    captchaURL: state.auth.captchaURL,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n    globalError: null\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n    .then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n}\r\n\r\nexport default appReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)\r\n));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return(\r\n            <React.Suspense fallback={<Preloader />}>\r\n                <Component {...props} />\r\n            </React.Suspense>\r\n        )\r\n    };\r\n}","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {HashRouter, Redirect, Route, withRouter} from \"react-router-dom\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\nimport {Switch} from \"react-router-dom\";\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\nclass App extends Component {\r\n\r\n    catchAllUnhandledErrors = (reason, promise) => {\r\n        alert(\"Some error occurred\");\r\n        //console.log(promiseRejectionEvent);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader />\r\n        }\r\n\r\n        return (\r\n                    <div className='app-wrapper'>\r\n                        <HeaderContainer/>\r\n                        <Navbar/>\r\n                        <div className='app-wrapper-content'>\r\n                            <Switch>\r\n                            <Route exact path='/'\r\n                                   render={() => <Redirect to={\"/profile\"} />}/>\r\n\r\n                            <Route path='/dialogs'\r\n                                   render={withSuspense(DialogsContainer)}/>\r\n\r\n                            <Route path='/profile/:userId?'\r\n                                   render={withSuspense(ProfileContainer)} />\r\n\r\n                            <Route path='/users'\r\n                                   render={() => <UsersContainer/>}/>\r\n\r\n                            <Route path='/login'\r\n                                   render={() => <LoginPage/>}/>\r\n\r\n                            <Route path='*'\r\n                                   render={() => <div>404 NOT FOUND</div>}/>\r\n                            </Switch>\r\n                        </div>\r\n                    </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\nconst GRApp = (props) => {\r\n   return <HashRouter >\r\n        <Provider store={store}>\r\n            <AppContainer />\r\n        </Provider>\r\n    </HashRouter>\r\n}\r\n\r\nexport default GRApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport GRApp from \"./App\";\r\n\r\nReactDOM.render(<GRApp />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2XLN_\",\"active\":\"Navbar_active__2cS6t\"};","export default __webpack_public_path__ + \"static/media/spin.b0ba638e.svg\";","import preloader from \"../../../images/spin.svg\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1KDWK\",\"loginBlock\":\"Header_loginBlock__2kTNE\",\"logOut\":\"Header_logOut__23U6t\",\"logIn\":\"Header_logIn__2SycX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2IEnN\",\"error\":\"FormsControls_error__3z1Ty\",\"formSummaryError\":\"FormsControls_formSummaryError__mQSYO\"};","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2Uoht\",\"pageNumber\":\"Paginator_pageNumber__2z-UL\",\"selectedPage\":\"Paginator_selectedPage__3Z_CM\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Guten Tag!', likesCount: 15},\r\n        {id: 2, message: 'Das ist mein zweiter Post.', likesCount: 20}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(post => post.id !== action.postId)}\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {...state, profile: {...state.profile, photos: action.photos}}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    try {\r\n        let response = await profileAPI.updateStatus(status);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    } catch(error) {\r\n       // alert(\"Too long status text\")\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0] }));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}