{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","images/avatar.png","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onChange","e","currentTarget","value","onBlur","updateStatus","ProfileInfo","profile","className","classes","descriptionWrapper","src","photos","large","Preloader","Post","post","avatar","width","height","alt","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","validate","required","MyPosts","postsElements","posts","map","id","postsWrapper","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","React","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.7a1de59a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentHeader\":\"ProfileInfo_contentHeader__3cXen\",\"descriptionWrapper\":\"ProfileInfo_descriptionWrapper__-ZXSP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsWrapper\":\"MyPosts_postsWrapper__gOSSV\",\"posts\":\"MyPosts_posts__9GMrR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1Dldh\"};","import React, {useEffect, useState} from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n       setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                {!editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={activateEditMode}>{props.status || \"Статус не указан\"}</span>\r\n                    </div>\r\n                }\r\n                {editMode &&\r\n                    <div>\r\n                        <input\r\n                            autoFocus={true}\r\n                            onChange={onStatusChange}\r\n                            onBlur={deactivateEditMode}\r\n                            value={status} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n\r\n    if (!profile) {\r\n      return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.descriptionWrapper}>\r\n                <img src={profile.photos.large} />\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","export default __webpack_public_path__ + \"static/media/avatar.d100ab7e.png\";","import React from 'react';\r\nimport classes from './Post.module.css';\r\nimport avatar from '../../../../images/avatar.png';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={classes.post}>\r\n            <img src={avatar} width=\"60\" height=\"60\" alt=\"\" />\r\n                {props.message}\r\n            <div>\r\n                <span>likes: </span>\r\n                {props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postsElements = props.posts.map(post => <Post message={post.message} likesCount={post.likesCount}\r\n                                                      id={post.id}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.postsWrapper}>\r\n            <h2>My posts</h2>\r\n                <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            <div className={classes.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newPostText\" component={Textarea} validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}