{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/AddMessageForm/AddMessageForm.module.css","images/avatar.png","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","classes","dialog","src","avatar","width","height","alt","to","activeClassName","active","name","Message","messageTimeCounter","message","messageTime","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","addMessageTextarea","component","Textarea","validate","required","placeholder","addMessageSubmit","Dialogs","state","messagesPage","date","Date","getHours","getMinutes","getSeconds","dialogsElements","dialogs","map","messagesElements","messages","newMessageBody","isAuth","dialogsItems","values","sendMessage","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,4B,oBCA7GD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,6B,oBCA/DD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,+B,oBCAnED,EAAOC,QAAU,CAAC,mBAAqB,2CAA2C,iBAAmB,2C,iHCDtF,MAA0B,mC,OCe1BC,EAVI,SAACC,GAChB,IAAIC,EAAI,mBAAeD,EAAME,IAC7B,OACI,sBAAKC,UAAWC,IAAQC,OAAxB,UACI,qBAAKC,IAAKC,EAAQC,MAAM,KAAKC,OAAO,KAAKC,IAAI,KAC7C,cAAC,IAAD,CAASC,GAAIV,EAAMW,gBAAiBR,IAAQS,OAA5C,SAAqDb,EAAMc,W,0BCCxDC,EARC,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,mBAAuBhB,EAAW,sCAChD,OACI,sBAAKG,UAAWC,IAAQa,QAAxB,UACI,sBAAMd,UAAWC,IAAQc,YAAzB,SAAuCF,MAA6BhB,EAAMiB,Y,2DCAhFE,EAAcC,YAAiB,IAkBtBC,cAAU,CAACC,KAAM,wBAAjBD,EAhBQ,SAACrB,GACpB,OACI,uBAAMuB,SAAUvB,EAAMwB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOtB,UAAWC,IAAQsB,mBAAoBC,UAAWC,IAClDC,SAAU,CAACC,IAAUX,GACrBL,KAAK,iBACLiB,YAAY,yBAEvB,8BACI,wBAAQ5B,UAAWC,IAAQ4B,iBAA3B,0BC4BDC,EAvCC,SAACjC,GAEb,IAAIkC,EAAQlC,EAAMmC,aAMdnB,EAAqB,WACjB,IAAIoB,EAAO,IAAIC,KACf,MAAM,GAAN,OAAUD,EAAKE,WAAf,YAA6BF,EAAKG,aAAlC,YAAkDH,EAAKI,eAG3DC,EAAkBP,EAAMQ,QACvBC,KAAK,SAAAtC,GAAM,OAAI,cAAC,EAAD,CAAYS,KAAMT,EAAOS,KAAsBZ,GAAIG,EAAOH,IAAtBG,EAAOH,OAC3D0C,EAAmBV,EAAMW,SACxBF,KAAK,SAAA1B,GAAO,OAAI,cAAC,EAAD,CAASA,QAASA,EAAQA,QAEjBf,GAAIe,EAAQf,GACZc,mBAAoBA,GAFfC,EAAQf,OAGtBgC,EAAMY,eAE3B,OAAK9C,EAAM+C,OAGR,8BACI,sBAAK5C,UAAWC,IAAQsC,QAAxB,UACI,qBAAKvC,UAAWC,IAAQ4C,aAAxB,SACKP,IAEL,sBAAKtC,UAAWC,IAAQyC,SAAxB,UACI,8BAAMD,IACN,cAAC,EAAD,CAAgBrB,SA5BX,SAAC0B,GACjBjD,EAAMkD,YAAYD,EAAOH,2BAiBH,cAAC,IAAD,CAAUnC,GAAI,Y,+CCzBxCwC,EAA6B,SAACjB,GAAD,MAAY,CACzCa,OAAQb,EAAMkB,KAAKL,S,QCeRM,sBAAQC,aAdD,SAACpB,GACnB,MAAO,CACHC,aAAcD,EAAMC,iBAIH,SAACoB,GACtB,MAAO,CACHL,YAAa,SAACJ,GACVS,EAASC,YAAmBV,UDPR,SAACW,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAKC,KAAK3D,MAAM+C,OACT,cAACU,EAAD,eAAeE,KAAK3D,QADI,cAAC,IAAD,CAAUW,GAAI,eAHV,GACXiD,IAAMH,WAStC,OAFqCH,YAAQH,EAARG,CAAoCI,KCI9DL,CAAwEpB","file":"static/js/3.d7974b1e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__p6-jD\",\"dialogsItems\":\"Dialogs_dialogsItems__2RO4y\",\"messages\":\"Dialogs_messages__3hWiF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__vDdHb\",\"active\":\"DialogItem_active__W8jeH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2JKLd\",\"messageTime\":\"Message_messageTime__2V8Jd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addMessageTextarea\":\"AddMessageForm_addMessageTextarea__2lsHw\",\"addMessageSubmit\":\"AddMessageForm_addMessageSubmit__1jVU8\"};","export default __webpack_public_path__ + \"static/media/avatar.8276449d.png\";","import React from 'react';\r\nimport classes from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport avatar from '../../../images/avatar.png';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = `/dialogs/${props.id}`;\r\n    return (\r\n        <div className={classes.dialog}>\r\n            <img src={avatar} width=\"60\" height=\"60\" alt=\"\" />\r\n            <NavLink to={path} activeClassName={classes.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from './Message.module.css';\r\n\r\nconst Message = ({messageTimeCounter, ...props}) => {\r\n    return (\r\n        <div className={classes.message}>\r\n            <span className={classes.messageTime}>{messageTimeCounter()}</span>{props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport classes from \"./AddMessageForm.module.css\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field className={classes.addMessageTextarea} component={Textarea}\r\n                       validate={[required, maxLength50]}\r\n                       name=\"newMessageBody\"\r\n                       placeholder=\"Enter your message\" />\r\n            </div>\r\n            <div>\r\n                <button className={classes.addMessageSubmit}>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.messagesPage;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    let messageTimeCounter = () => {\r\n            let date = new Date();\r\n            return `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\r\n        }\r\n\r\n    let dialogsElements = state.dialogs\r\n        .map( dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} /> );\r\n    let messagesElements = state.messages\r\n        .map( message => <Message message={message.message}\r\n                                  key={message.id}\r\n                                  id={message.id}\r\n                                  messageTimeCounter={messageTimeCounter} />);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'} />;\r\n\r\n    return (\r\n       <div>\r\n           <div className={classes.dialogs}>\r\n               <div className={classes.dialogsItems}>\r\n                   {dialogsElements}\r\n               </div>\r\n               <div className={classes.messages}>\r\n                   <div>{messagesElements}</div>\r\n                   <AddMessageForm onSubmit={addNewMessage} />\r\n               </div>\r\n           </div>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);"],"sourceRoot":""}