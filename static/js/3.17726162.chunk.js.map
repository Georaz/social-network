{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileData/ProfileData.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileData/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileData/ProfileData.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","images/avatar.png","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","classes","myStatusHeading","onDoubleClick","autoFocus","onChange","e","currentTarget","value","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","style","formSummaryError","htmlFor","fieldLabel","createField","Input","type","Textarea","Object","keys","contacts","map","key","contact","saveButton","Contact","contactTitle","contactValue","ProfileData","isOwner","goToEditMode","profileData","profileDataItem","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","editButton","onClick","ProfileInfo","savePhoto","saveProfile","Preloader","descriptionWrapper","userProfileHeaderWrapper","userAvatarSection","mainPhotoWrapper","src","photos","large","userPhoto","mainPhoto","alt","mainPhotoUploader","id","target","files","length","mainPhotoUploaderLabel","initialValues","formData","then","Post","post","avatar","width","height","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","Field","name","component","validate","required","MyPosts","postsElements","posts","postsWrapper","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","React","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.17726162.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentHeader\":\"ProfileInfo_contentHeader__3cXen\",\"descriptionWrapper\":\"ProfileInfo_descriptionWrapper__-ZXSP\",\"mainPhoto\":\"ProfileInfo_mainPhoto__1i2M9\",\"contact\":\"ProfileInfo_contact__2Ez3Z\",\"userAvatarSection\":\"ProfileInfo_userAvatarSection__3wsQE\",\"mainPhotoWrapper\":\"ProfileInfo_mainPhotoWrapper__1adlb\",\"mainPhotoUploader\":\"ProfileInfo_mainPhotoUploader__1uYmS\",\"mainPhotoUploaderLabel\":\"ProfileInfo_mainPhotoUploaderLabel__19x2k\",\"userProfileHeaderWrapper\":\"ProfileInfo_userProfileHeaderWrapper__3TG_Z\",\"myStatusHeading\":\"ProfileInfo_myStatusHeading__2S9s8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ProfileData_contact__2h2cb\",\"profileData\":\"ProfileData_profileData__1nvOE\",\"profileDataItem\":\"ProfileData_profileDataItem__2UT1U\",\"editButton\":\"ProfileData_editButton__3j5iG\",\"saveButton\":\"ProfileData_saveButton__2J1LD\",\"fieldLabel\":\"ProfileData_fieldLabel__1AMKW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsWrapper\":\"MyPosts_postsWrapper__gOSSV\",\"posts\":\"MyPosts_posts__9GMrR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1Dldh\"};","import React, {useEffect, useState} from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n       setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                {!editMode &&\r\n                    <div>\r\n                        <b className={classes.myStatusHeading}>My status:</b><br />\r\n                        <span onDoubleClick={activateEditMode}>\r\n                            &#8220; {props.status || \"Статус не указан\"} &#8221;\r\n                        </span>\r\n                    </div>\r\n                }\r\n                {editMode &&\r\n                    <div>\r\n                        <input\r\n                            autoFocus={true}\r\n                            onChange={onStatusChange}\r\n                            onBlur={deactivateEditMode}\r\n                            value={status} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport {createField, Input, Textarea} from \"../../../common/FormsControls/FormsControls\";\r\nimport classes from \"./ProfileData.module.css\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from \"../../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div>\r\n            <label htmlFor=\"fullName\" className={classes.fieldLabel}><b>Full name:</b></label>\r\n            {createField(\"Full name\", \"fullName\", Input, [], \"fullName\")}\r\n        </div>\r\n        <div>\r\n            <label htmlFor=\"lookingForAJob\" className={classes.fieldLabel}><b>Looking for a job:</b></label>\r\n            {createField(\"\", \"lookingForAJob\", Input, [], \"lookingForAJob\", {type: \"checkbox\"})}\r\n        </div>\r\n        <div>\r\n            <label htmlFor=\"lookingForAJobDescription\" className={classes.fieldLabel}><b>My professional skills:</b></label>\r\n            {createField(\"My professional skills\", \"lookingForAJobDescription\", Textarea, [], \"lookingForAJobDescription\")}\r\n        </div>\r\n        <div>\r\n            <label htmlFor=\"aboutMe\" className={classes.fieldLabel}><b>About me:</b></label>\r\n            {createField(\"About me\", \"aboutMe\", Textarea, [], \"aboutMe\")}\r\n        </div>\r\n        <div>\r\n            <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={classes.contact}>\r\n                    <b>{key}: {createField(key, \"contacts.\" + key, Input, [])}</b>\r\n                </div>\r\n        })}\r\n        </div>\r\n            <div><button className={classes.saveButton}>Save</button></div>\r\n    </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React from \"react\";\r\nimport classes from \"./ProfileData.module.css\";\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={classes.contact}><b>{contactTitle}:</b> {contactValue}</div>\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return(\r\n        <div className={classes.profileData}>\r\n            <div className={classes.profileDataItem}>\r\n                <b>Full name:</b> {profile.fullName}\r\n            </div>\r\n            <div className={classes.profileDataItem}>\r\n                <b>Looking for a job:</b> {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n            <div className={classes.profileDataItem}>\r\n                <b>My professional skills:</b> {profile.lookingForAJobDescription}\r\n            </div>\r\n            }\r\n            <div className={classes.profileDataItem}>\r\n                <b>About me:</b> {profile.aboutMe}\r\n            </div>\r\n            <div className={classes.profileDataItem}>\r\n                <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n            })}\r\n            </div>\r\n            {isOwner && <div><button className={classes.editButton} onClick={goToEditMode}>Edit</button></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileData;","import React, {useState} from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../images/userAvatar.png\";\r\nimport ProfileDataForm from \"./ProfileData/ProfileDataForm\";\r\nimport ProfileData from \"./ProfileData/ProfileData\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n      return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false)\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className={classes.descriptionWrapper}>\r\n                <div className={classes.userProfileHeaderWrapper}>\r\n                <div className={classes.userAvatarSection}>\r\n                    <div className={classes.mainPhotoWrapper}>\r\n                        <img src={profile.photos.large || userPhoto} className={classes.mainPhoto} alt=\"\"/>\r\n                    </div>\r\n                    {isOwner && <div>\r\n                        <input className={classes.mainPhotoUploader}\r\n                               type={\"file\"}\r\n                               id={\"mainPhotoUploader\"}\r\n                               onChange={onMainPhotoSelected}/>\r\n                        <label className={classes.mainPhotoUploaderLabel} htmlFor=\"mainPhotoUploader\">Select photo</label>\r\n                    </div>}\r\n                </div>\r\n                    <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                </div>\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n                    : <ProfileData goToEditMode={() => {setEditMode(true)}} profile={profile} isOwner={isOwner} />}\r\n\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","export default __webpack_public_path__ + \"static/media/avatar.d100ab7e.png\";","import React from 'react';\r\nimport classes from './Post.module.css';\r\nimport avatar from '../../../../images/avatar.png';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={classes.post}>\r\n            <img src={avatar} width=\"60\" height=\"60\" alt=\"\" />\r\n                {props.message}\r\n            <div>\r\n                <span>likes: </span>\r\n                {props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postsElements = props.posts.map(post => <Post key={post.id}\r\n                                                      message={post.message}\r\n                                                      likesCount={post.likesCount}\r\n                                                      id={post.id}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.postsWrapper}>\r\n            <h2>My posts</h2>\r\n                <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            <div className={classes.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newPostText\" component={Textarea} validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                savePhoto={props.savePhoto}\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                saveProfile={props.saveProfile}\r\n                updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}