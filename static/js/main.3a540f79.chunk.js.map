{"version":3,"sources":["redux/dialogs-reducer.js","api/api.js","components/Navbar/Navbar.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","images/userAvatar.png","components/Users/User.jsx","components/Users/Users.js","redux/users-selectors.js","components/Users/UsersContainer.jsx","images/gr.svg","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/Navbar/Navbar.module.css","components/common/FormsControls/FormsControls.js","images/spin.svg","components/common/Preloader/Preloader.js","components/common/FormsControls/FormsControls.module.css","components/common/Paginator/Paginator.module.css","utils/validators/validators.js","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["SEND_MESSAGE","initialState","messages","id","message","dialogs","name","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Navbar","className","classes","nav","to","activeClassName","active","updateObjectInArray","items","itemId","objPropName","newObjProps","map","user","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","page","cn","selectedPage","pageNumber","e","User","src","photos","small","av1","userPhoto","width","height","alt","disabled","some","Users","props","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","bind","totalCount","Header","header","logo","loginBlock","isAuth","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","Input","required","formSummaryError","length","stopSubmit","_error","formData","INITIALIZED_SUCCESS","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","messagesPage","sidebar","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","GRApp","ReactDOM","document","getElementById","module","exports","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","placeholder","component","validators","text","validate","preloader","value","maxLengthCreator","maxLength","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost","postId"],"mappings":"mLAAMA,EAAe,eAEjBC,EAAe,CACfC,SAAU,CACN,CAACC,GAAI,EAAGC,QAAS,SACjB,CAACD,GAAI,EAAGC,QAAS,gBACjB,CAACD,GAAI,EAAGC,QAAS,eAErBC,QAAS,CACL,CAACF,GAAI,EAAGG,KAAM,UACd,CAACH,GAAI,EAAGG,KAAM,QACd,CAACH,GAAI,EAAGG,KAAM,QACd,CAACH,GAAI,EAAGG,KAAM,SACd,CAACH,GAAI,EAAGG,KAAM,UAkBTC,EAAqB,SAACC,GAAD,MAAqB,CAACC,KAAMT,EAAcQ,mBAE7DE,IAhBQ,WAAmC,IAAlCC,EAAiC,uDAAzBV,EAAcW,EAAW,uCAErD,OAAOA,EAAOH,MACV,KAAKT,EACD,IAAIa,EAAOD,EAAOJ,eAClB,OAAO,2BACAG,GADP,IAEIT,SAAS,GAAD,mBAAMS,EAAMT,UAAZ,CAAsB,CAACC,GAAI,EAAGC,QAASS,OAEvD,QACI,OAAOF,K,sDC3BnB,mHAGMG,EAAWC,SAAa,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACL,UAAW,0CAINC,EAAW,CACpBC,SADoB,WACsB,IAAjCC,EAAgC,uDAAlB,EAAGC,EAAe,uDAAJ,GACjC,OAAOR,EAASS,IAAT,qBAA2BF,EAA3B,kBAAgDC,IAClDE,MAAK,SAAAC,GACF,OAAOA,EAASC,SAG5BC,OAPoB,SAObC,GACH,OAAOd,EAASe,KAAT,iBAAwBD,KAEnCE,SAVoB,SAUXF,GACL,OAAOd,EAASiB,OAAT,iBAA0BH,KAErCI,WAboB,SAaTJ,GAEP,OADAK,QAAQC,KAAK,0CACNC,EAAWH,WAAWJ,KAIxBO,EAAa,CACtBH,WADsB,SACXJ,GACP,OAAOd,EAASS,IAAI,WAAaK,IAErCQ,UAJsB,SAIZR,GACN,OAAOd,EAASS,IAAI,kBAAoBK,IAE5CS,aAPsB,SAOTC,GACT,OAAOxB,EAASyB,IAAT,iBAA+B,CAACD,OAAQA,MAI1CE,EAAU,CACnBC,GADmB,WAEf,OAAO3B,EAASS,IAAT,YAEXmB,MAJmB,SAIbC,EAAOC,GAA+B,IAArBC,EAAoB,wDACvC,OAAO/B,EAASe,KAAT,aAA4B,CAACc,QAAOC,WAAUC,gBAEzDC,OAPmB,WAQf,OAAOhC,EAASiB,OAAT,iB,2MC/BAgB,EAfA,WACX,OACI,qBAAKC,UAAWC,IAAQC,IAAxB,SACI,+BACI,6BAAI,cAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBH,IAAQI,OAAhD,uBACJ,6BAAI,cAAC,IAAD,CAASF,GAAG,WAAWC,gBAAiBH,IAAQI,OAAhD,wBACJ,6BAAI,cAAC,IAAD,CAASF,GAAG,SAASC,gBAAiBH,IAAQI,OAA9C,qBACJ,6BAAI,cAAC,IAAD,CAASF,GAAG,QAAQC,gBAAiBH,IAAQI,OAA7C,oBACJ,6BAAI,cAAC,IAAD,CAASF,GAAG,SAASC,gBAAiBH,IAAQI,OAA9C,qBACJ,6BAAI,cAAC,IAAD,CAASF,GAAG,YAAYC,gBAAiBH,IAAQI,OAAjD,8B,gECbPC,EAAsB,SAACC,EAAOC,EAAQC,EAAaC,GAE5D,OAAOH,EAAMI,KAAI,SAAAC,GACb,OAAIA,EAAKH,KAAiBD,EACf,2BAAII,GAASF,GAEjBE,MCHTC,EAAS,SACTC,EAAW,WACXC,EAAY,YACZC,EAAmB,mBACnBC,EAAwB,wBACxBC,EAAqB,qBACrBC,EAA+B,+BAEjClE,EAAe,CACfmE,MAAO,GACP9C,SAAU,GACV+C,gBAAiB,EACjBhD,YAAa,EACbiD,YAAY,EACZC,oBAAqB,IAwCZC,EAAgB,SAAC5C,GAAD,MAAa,CAACnB,KAAMoD,EAAQjC,WAC5C6C,EAAkB,SAAC7C,GAAD,MAAa,CAACnB,KAAMqD,EAAUlC,WAEhD8C,EAAiB,SAACrD,GAAD,MAAkB,CAACZ,KAAMuD,EAAkB3C,gBAE5DsD,EAAmB,SAACL,GAAD,MAAiB,CAAC7D,KAAMyD,EAAoBI,eAC/DM,EAA0B,SAACN,EAAY1C,GAAb,MAAyB,CAC5DnB,KAAM0D,EACNG,aACA1C,WAeEiD,EAAkB,uCAAG,WAAOC,EAAUlD,EAAQmD,EAAWC,GAApC,SAAAC,EAAA,6DACvBH,EAASF,GAAwB,EAAMhD,IADhB,SAEFmD,EAAUnD,GAFR,OAIS,GAJT,OAIVF,KAAKwD,YACdJ,EAASE,EAAcpD,IAE3BkD,EAASF,GAAwB,EAAOhD,IAPjB,2CAAH,4DAsBTuD,EAnFM,WAAmC,IAAlCxE,EAAiC,uDAAzBV,EAAcW,EAAW,uCACnD,OAAQA,EAAOH,MACX,KAAKoD,EACD,OAAO,2BACAlD,GADP,IAEIyD,MAAOd,EAAoB3C,EAAMyD,MAAOxD,EAAOgB,OAAQ,KAAM,CAACwD,UAAU,MAEhF,KAAKtB,EACD,OAAO,2BACAnD,GADP,IAEIyD,MAAOd,EAAoB3C,EAAMyD,MAAOxD,EAAOgB,OAAQ,KAAM,CAACwD,UAAU,MAEhF,KAAKrB,EACD,OAAO,2BAAIpD,GAAX,IAAkByD,MAAOxD,EAAOwD,QAEpC,KAAKJ,EACD,OAAO,2BAAIrD,GAAX,IAAkBU,YAAaT,EAAOS,cAE1C,KAAK4C,EACD,OAAO,2BAAItD,GAAX,IAAkB0D,gBAAiBzD,EAAOyD,kBAE9C,KAAKH,EACD,OAAO,2BAAIvD,GAAX,IAAkB2D,WAAY1D,EAAO0D,aAEzC,KAAKH,EACD,OAAO,2BACAxD,GADP,IAEI4D,oBAAqB3D,EAAO0D,WAAP,sBACX3D,EAAM4D,qBADK,CACgB3D,EAAOgB,SACtCjB,EAAM4D,oBAAoBc,QAAO,SAAAlF,GAAE,OAAIA,GAAMS,EAAOgB,YAGlE,QACI,OAAOjB,I,4DCZJ2E,EArCC,SAAC,GAKb,IAL4F,IAA9EC,EAA6E,EAA7EA,gBAAiBjE,EAA4D,EAA5DA,SAAUD,EAAkD,EAAlDA,YAAamE,EAAqC,EAArCA,cAAqC,IAAtBC,mBAAsB,MAAR,GAAQ,EAEvFC,EAAaC,KAAKC,KAAKL,EAAkBjE,GAEzCuE,EAAQ,GACHC,EAAI,EAAGA,GAAKJ,EAAYI,IAC7BD,EAAME,KAAKD,GAGf,IAAIE,EAAeL,KAAKC,KAAKF,EAAaD,GAC1C,EAAwCQ,mBAAS,GAAjD,mBAAKC,EAAL,KAAoBC,EAApB,KACIC,GAAyBF,EAAgB,GAAKT,EAAc,EAC5DY,EAAyBH,EAAgBT,EAE7C,OACI,sBAAKzC,UAAWC,IAAQqD,UAAxB,UACKJ,EAAgB,GACjB,wBAAQK,QAAS,WAAOJ,EAAiBD,EAAgB,IAAzD,kBAGIL,EACKR,QAAO,SAAAmB,GAAI,OAAIA,GAAQJ,GAAyBI,GAAQH,KACxD1C,KAAI,SAAA6C,GACD,OAAO,sBAAMxD,UAAYyD,IAAG,eACvBxD,IAAQyD,aAAerF,IAAgBmF,GACzCvD,IAAQ0D,YAEEJ,QAAS,SAACK,GACNpB,EAAcgB,IALxB,SAMUA,GAHCA,MAK5BR,EAAeE,GACjB,wBAAQK,QAAS,WAAQJ,EAAiBD,EAAgB,IAA1D,sB,kBCpCG,MAA0B,uCCqD1BW,EAhDJ,SAAC,GAAmD,IAAlDjD,EAAiD,EAAjDA,KAAMW,EAA2C,EAA3CA,oBAAqBzC,EAAsB,EAAtBA,SAAUH,EAAY,EAAZA,OAC9C,OACI,gCACgB,iCACI,8BACI,cAAC,IAAD,CAASwB,GAAI,YAAcS,EAAKzD,GAAhC,SACA,qBAAK2G,IAA2B,OAAtBlD,EAAKmD,OAAOC,MAAiBpD,EAAKmD,OAAOC,MAAQC,EACtDjE,UAAWC,IAAQiE,UACnBC,MAAM,MAAMC,OAAO,MAAMC,IAAI,SAGtC,8BACKzD,EAAKwB,SACA,wBAAQkC,SAAU/C,EAAoBgD,MAAK,SAAApH,GAAE,OAAIA,IAAOyD,EAAKzD,MACrDoG,QAAS,WACLzE,EAAS8B,EAAKzD,KAF1B,sBAMA,wBAAQmH,SAAU/C,EAAoBgD,MAAK,SAAApH,GAAE,OAAIA,IAAOyD,EAAKzD,MACrDoG,QAAS,WACL5E,EAAOiC,EAAKzD,KAFxB,yBAO1B,iCACgB,iCACI,8BACKyD,EAAKtD,OAEV,8BACKsD,EAAKtB,YAGd,iCACI,8BACK,0BAEL,8BACK,iCCtBtBkF,EAnBH,SAAC,GAA8E,IAA7EnG,EAA4E,EAA5EA,YAAagD,EAA+D,EAA/DA,gBAAiB/C,EAA8C,EAA9CA,SAAUkE,EAAoC,EAApCA,cAAepB,EAAqB,EAArBA,MAAUqD,EAAW,oFACtF,OACI,gCACI,cAAC,EAAD,CAAWpG,YAAaA,EAAakE,gBAAiBlB,EAC3C/C,SAAUA,EAAUkE,cAAeA,IAC9C,8BAEIpB,EAAMT,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CACdA,KAAMA,EAENW,oBAAqBkD,EAAMlD,oBAC3BzC,SAAU2F,EAAM3F,SAChBH,OAAQ8F,EAAM9F,QAHTiC,EAAKzD,a,0BCPjBiB,GAAWsG,cAJC,SAAC/G,GACtB,OAAOA,EAAMgH,UAAUvD,SAIvB,SAACA,GACD,OAAOA,EAAMiB,QAAO,SAAAzB,GAAI,OAAI,QAGnBgE,GAAc,SAACjH,GACxB,OAAOA,EAAMgH,UAAUrG,UAGduG,GAAqB,SAAClH,GAC/B,OAAOA,EAAMgH,UAAUtD,iBAGdyD,GAAiB,SAACnH,GAC3B,OAAOA,EAAMgH,UAAUtG,aAGd0G,GAAgB,SAACpH,GAC1B,OAAOA,EAAMgH,UAAUrD,YAGd0D,GAAyB,SAACrH,GACnC,OAAOA,EAAMgH,UAAUpD,qBCRrB0D,G,4MAMFzC,cAAgB,SAACmB,GACb,IAAOrF,EAAY,EAAKmG,MAAjBnG,SACP,EAAKmG,MAAMrG,SAASuF,EAAYrF,I,uDAPpC,WACI,MAAgC4G,KAAKT,MAA9BpG,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,SACpB4G,KAAKT,MAAMrG,SAASC,EAAaC,K,oBAQrC,WACI,OAAO,qCACF4G,KAAKT,MAAMnD,WAAa,cAAC6D,EAAA,EAAD,IAAe,KACxC,cAAC,EAAD,CACI9D,gBAAiB6D,KAAKT,MAAMpD,gBAC5B/C,SAAU4G,KAAKT,MAAMnG,SACrBD,YAAa6G,KAAKT,MAAMpG,YACxBmE,cAAe0C,KAAK1C,cACpBpB,MAAO8D,KAAKT,MAAMrD,MAClBzC,OAAQuG,KAAKT,MAAM9F,OACnBG,SAAUoG,KAAKT,MAAM3F,SACrByC,oBAAqB2D,KAAKT,MAAMlD,6B,GAtBnB6D,IAAMC,WAuCpBC,gBAEXC,aAbkB,SAAC5H,GACnB,MAAO,CACHyD,MAAOhD,GAAST,GAChBW,SAAUsG,GAAYjH,GACtB0D,gBAAiBwD,GAAmBlH,GACpCU,YAAayG,GAAenH,GAC5B2D,WAAYyD,GAAcpH,GAC1B4D,oBAAqByD,GAAuBrH,MAMvB,CAACgB,ON8BR,SAACC,GACnB,8CAAO,WAAOkD,GAAP,SAAAG,EAAA,sDACHJ,EAAmBC,EAAUlD,EAAQT,IAASQ,OAAO6G,KAAKrH,KAAWqD,GADlE,2CAAP,uDM/BkC1C,SNoCd,SAACF,GACrB,8CAAO,WAAOkD,GAAP,SAAAG,EAAA,sDACHJ,EAAmBC,EAAUlD,EAAQT,IAASW,SAAS0G,KAAKrH,KAAWsD,GADpE,2CAAP,uDMrC4CC,iBAAgBE,0BAAyBxD,SNQ7D,SAACoF,EAAMlF,GAC/B,8CAAO,WAAOwD,GAAP,eAAAG,EAAA,6DACHH,EAASH,GAAiB,IAC1BG,EAASJ,EAAe8B,IAFrB,SAIcrF,IAASC,SAASoF,EAAMlF,GAJtC,OAICI,EAJD,OAKHoD,EAASH,GAAiB,IAC1BG,GAjBiBV,EAiBC1C,EAAK6B,MAjBK,CAAC9C,KAAMsD,EAAWK,WAkB9CU,GAhB2BT,EAgBC3C,EAAK+G,WAhBe,CAAChI,KAAMwD,EAAuBI,qBAS3E,iCATuB,IAACA,EAFVD,IAWd,OAAP,yDMXWkE,CAGRL,I,oBC9DQ,OAA0B,+BCkB1BS,GAbA,SAACjB,GACZ,OACI,yBAAQzE,UAAWC,KAAQ0F,OAA3B,UACI,qBAAK7B,IAAK8B,GAAMzB,MAAM,MAAMC,OAAO,KAAKC,IAAI,KAC5C,qBAAKrE,UAAWC,KAAQ4F,WAAxB,SACMpB,EAAMqB,OACF,gCAAMrB,EAAM/E,MAAZ,MAAqB,wBAAQ6D,QAASkB,EAAM3E,OAAvB,wBACrB,cAAC,IAAD,CAASK,GAAI,SAAb,yB,SCThB4F,GAAgB,gCAElB9I,GAAe,CACf2B,OAAQ,KACRe,MAAO,KACPD,MAAO,KACPoG,QAAQ,GAgBCE,GAAkB,SAACpH,EAAQe,EAAOD,EAAOoG,GAAvB,MAAmC,CAC9DrI,KAAMsI,GACNE,QAAS,CAACrH,SAAQe,QAAOD,QAAOoG,YAGvBI,GAAkB,yDAAM,WAAOpE,GAAP,uBAAAG,EAAA,sEACZzC,IAAQC,KADI,OAEA,KAD7BhB,EAD6B,QAEpBC,KAAKwD,aAAmB,EACRzD,EAASC,KAAKA,KAAlCvB,EAD2B,EAC3BA,GAAIwC,EADuB,EACvBA,MAAOD,EADgB,EAChBA,MAChBoC,EAASkE,GAAgB7I,EAAIwC,EAAOD,GAAO,KAJd,2CAAN,uDAyBhByG,GA3CK,WAAmC,IAAlCxI,EAAiC,uDAAzBV,GAAcW,EAAW,uCAClD,OAAQA,EAAOH,MACX,KAAKsI,GACD,OAAO,2BACApI,GACAC,EAAOqI,SAGlB,QACI,OAAOtI,IChBbyI,G,4JAIF,WACI,OACI,cAAC,GAAD,eAAYlB,KAAKT,Y,GANCW,IAAMC,WAgBrBE,gBALS,SAAC5H,GAAD,MAAY,CAChCmI,OAAQnI,EAAM0I,KAAKP,OACnBpG,MAAO/B,EAAM0I,KAAK3G,SAGkB,CAACI,OD2BnB,yDAAM,WAAOgC,GAAP,SAAAG,EAAA,sEACHzC,IAAQM,SADL,OAES,IAFT,OAEXpB,KAAKwD,YACdJ,EAASkE,GAAgB,KAAM,KAAM,MAAM,IAHvB,2CAAN,wDC3BPT,CAAmCa,I,gDCK5CE,GAAiBC,aAAU,CAACC,KAAM,SAAjBD,EAjBL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,MAC9B,OACI,uBAAMC,SAAUF,EAAhB,UACKG,aAAY,QAAS,QAASC,KAAO,CAACC,OACtCF,aAAY,WAAY,WAAYC,KAAO,CAACC,MAAW,CAACrJ,KAAM,aAC9DmJ,aAAY,KAAM,aAAcC,KAAO,GAAI,CAACpJ,KAAM,YAAa,eAE/DiJ,GAAS,qBAAK1G,UAAWC,KAAQ8G,iBAAxB,SACLL,IAEL,8BACI,mDA8BDnB,gBAJS,SAAC5H,GAAD,MAAY,CAChCmI,OAAQnI,EAAM0I,KAAKP,UAGiB,CAACpG,MFZpB,SAACC,EAAOC,EAAUC,GAAlB,8CAAiC,WAAOiC,GAAP,iBAAAG,EAAA,sEAC7BzC,IAAQE,MAAMC,EAAOC,EAAUC,GADF,OAEjB,KAD7BpB,EAD8C,QAErCC,KAAKwD,WACdJ,EAASoE,OAEL9I,EAAUqB,EAASC,KAAKxB,SAAS8J,OAAS,EAAIvI,EAASC,KAAKxB,SAAS,GAAK,aAC9E4E,EAASmF,aAAW,QAAS,CAACC,OAAQ9J,MANQ,2CAAjC,wDEYNmI,EAtBD,SAACd,GAKX,OAAIA,EAAMqB,OACC,cAAC,IAAD,CAAU3F,GAAI,aAIrB,gCACI,uCACA,cAACmG,GAAD,CAAgBK,SAXP,SAACQ,GACd1C,EAAM/E,MAAMyH,EAASxH,MAAOwH,EAASvH,SAAUuH,EAAStH,qBC5B1DuH,GAAsB,sBAExBnK,GAAe,CACfoK,aAAa,GAyBFC,GAtBI,WAAmC,IAAlC3J,EAAiC,uDAAzBV,GAAcW,EAAW,uCACjD,OAAQA,EAAOH,MACX,KAAK2J,GACD,OAAO,2BACAzJ,GADP,IAEI0J,aAAa,IAErB,QACI,OAAO1J,IChBfV,GAAe,GAOJsK,GALQ,WAAmC,IAAlC5J,EAAiC,uDAAzBV,GAE5B,OAAOU,G,uCCMP6J,GAAWC,aAAgB,CAC3BC,YAAaC,KACbC,aAAclK,KACdmK,QAASN,GACT5C,UAAWxC,EACXkE,KAAMF,GACNK,KAAMsB,KACNC,IAAKT,KAGHU,GAAmBC,OAAOC,sCAAwC5C,KAClE6C,GAAQC,aAAYZ,GAAUQ,GAAiBK,aAAgBC,QAGrEL,OAAOM,UAAYJ,GAEJA,UCvBFK,GAAe,SAACnD,GACzB,OAAO,SAACZ,GACJ,OACI,cAAC,IAAMgE,SAAP,CAAgBC,SAAU,cAACvD,EAAA,EAAD,IAA1B,SACI,cAACE,EAAD,eAAeZ,QCOzBkE,GAAmBvD,IAAMwD,MAAK,kBAAM,iCACpCC,GAAmBzD,IAAMwD,MAAK,kBAAM,iCAEpCE,G,uKACF,WACI5D,KAAKT,MAAMsE,kB,oBAGf,WACI,OAAK7D,KAAKT,MAAM4C,YAKJ,sBAAKrH,UAAU,cAAf,UACI,cAAC,GAAD,IACA,cAAC,EAAD,IACA,sBAAKA,UAAU,sBAAf,UACI,cAAC,IAAD,CAAOgJ,KAAK,WACLC,OAAQT,GAAaG,MAE5B,cAAC,IAAD,CAAOK,KAAK,oBACLC,OAAQT,GAAaK,MAE5B,cAAC,IAAD,CAAOG,KAAK,SACLC,OAAQ,kBAAM,cAAC,GAAD,OAErB,cAAC,IAAD,CAAOD,KAAK,SACLC,OAAQ,kBAAM,cAAC,GAAD,aAlB9B,cAAC9D,EAAA,EAAD,Q,GAPDE,aAoCd6D,GAAe5D,aACf6D,IACA5D,aANoB,SAAC5H,GAAD,MAAY,CAChC0J,YAAa1J,EAAMoK,IAAIV,eAKE,CAAC0B,cJjCD,kBAAM,SAACjH,GAChC,IAAIsH,EAAUtH,EAASoE,MACvBmD,QAAQC,IAAI,CAACF,IACZ5K,MAAK,WACFsD,EANiC,CAACrE,KAAM2J,YIiC7B9B,CAE4BwD,IAUhCS,GARD,SAAC9E,GACZ,OAAO,cAAC,IAAD,UACF,cAAC,IAAD,CAAU0D,MAAOA,GAAjB,SACI,cAACe,GAAD,SCvDZM,IAASP,OAAO,cAAC,GAAD,IAAiBQ,SAASC,eAAe,U,mBCJzDC,EAAOC,QAAU,CAAC,IAAM,oBAAoB,OAAS,yB,gMCG/CC,EAAc,SAAC,GAA8C,EAA7CC,MAA8C,IAAD,IAAtCC,KAAOC,EAA+B,EAA/BA,QAAStD,EAAsB,EAAtBA,MAAQuD,EAAc,EAAdA,SAC3CC,EAAWF,GAAWtD,EAC5B,OACI,sBAAK1G,UAAWC,IAAQkK,YAAc,KAAOD,EAAWjK,IAAQyG,MAAQ,IAAxE,UACI,8BACKuD,IAEJC,GAAY,+BAAOxD,QAKnB0D,EAAW,SAAC3F,GACrB,IAAOqF,EAAoCrF,EAApCqF,MAAuBO,GAAa5F,EAA7BsF,KAA6BtF,EAAvB6F,MAApB,YAA2C7F,EAA3C,2BACA,OAAO,cAACoF,EAAD,2BAAiBpF,GAAjB,aAAwB,oDAAcqF,GAAWO,QAG/CxD,EAAQ,SAACpC,GAClB,IAAOqF,EAAoCrF,EAApCqF,MAAuBO,GAAa5F,EAA7BsF,KAA6BtF,EAAvB6F,MAApB,YAA2C7F,EAA3C,2BACA,OAAO,cAACoF,EAAD,2BAAiBpF,GAAjB,aAAwB,iDAAWqF,GAAWO,QAG5CzD,EAAc,SAAC2D,EAAajN,EAAMkN,EAAWC,GAA/B,IAA2ChG,EAA3C,uDAAmD,GAAIiG,EAAvD,uDAA8D,GAA9D,OACvB,gCACI,cAAC,IAAD,aAAOH,YAAaA,EAAajN,KAAMA,EAAMkN,UAAWA,EAAWG,SAAUF,GAClEhG,IAAUiG,O,gCC7Bd,UAA0B,iC,cCW1BvF,IARC,WACZ,OACI,8BACI,qBAAKrB,IAAK8G,Q,mBCLtBjB,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,mBCA3HD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,aAAe,kC,gCCDrH,oEAAO,IAAM9C,EAAW,SAAC+D,GACrB,IAAIA,EACJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,GAASA,EAAM7D,OAAS+D,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,mBCL3CpB,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,6B,4NCCzDoB,EAAW,WACXC,EAAmB,mBACnBC,EAAa,aACbC,EAAc,cAEhBlO,EAAe,CACfmO,MAAO,CACH,CAACjO,GAAI,EAAGC,QAAS,aAAciO,WAAY,IAC3C,CAAClO,GAAI,EAAGC,QAAS,6BAA8BiO,WAAY,KAE/DC,QAAS,KACThM,OAAQ,IAiCCiM,EAAuB,SAACC,GAAD,MAAkB,CAAC/N,KAAMuN,EAAUQ,gBAE1DC,EAAY,SAACnM,GAAD,MAAa,CAAC7B,KAAMyN,EAAY5L,WAG5CoM,EAAiB,SAAC9M,GAAD,8CAAY,WAAOkD,GAAP,eAAAG,EAAA,sEACjB9D,IAASa,WAAWJ,GADH,OAClCH,EADkC,OAEtCqD,GAN2BwJ,EAMH7M,EAASC,KANO,CAACjB,KAAMwN,EAAkBK,aAI3B,iCAJZ,IAACA,IAIW,OAAZ,uDAKjBlM,EAAY,SAACR,GAAD,8CAAY,WAAOkD,GAAP,eAAAG,EAAA,sEACZ9C,IAAWC,UAAUR,GADT,OAC7BH,EAD6B,OAEjCqD,EAAS2J,EAAUhN,EAASC,OAFK,2CAAZ,uDAKZW,EAAe,SAACC,GAAD,8CAAY,WAAOwC,GAAP,SAAAG,EAAA,sEACf9C,IAAWE,aAAaC,GADT,OAEH,IAFG,OAEvBZ,KAAKwD,YACdJ,EAAS2J,EAAUnM,IAHa,2CAAZ,uDAObqI,IApDQ,WAAmC,IAAlChK,EAAiC,uDAAzBV,EAAcW,EAAW,uCACrD,OAAOA,EAAOH,MACV,KAAKuN,EACD,IAAIW,EAAU,CACVxO,GAAI,EACJC,QAASQ,EAAO4N,YAChBH,WAAY,GAEhB,OAAO,2BACA1N,GADP,IAEIyN,MAAM,GAAD,mBAAMzN,EAAMyN,OAAZ,CAAmBO,IACxBH,YAAa,KAGrB,KAAKN,EACD,OAAO,2BACAvN,GADP,IAEI2B,OAAQ1B,EAAO0B,SAGvB,KAAK2L,EACD,OAAO,2BAAItN,GAAX,IAAkB2N,QAAS1N,EAAO0N,UAEtC,KAAKH,EACD,OAAO,2BAAIxN,GAAX,IAAkByN,MAAOzN,EAAMyN,MAAM/I,QAAO,SAAAxD,GAAI,OAAIA,EAAK1B,KAAOS,EAAOgO,YAC3E,QACI,OAAOjO,M","file":"static/js/main.3a540f79.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, message: 'Hallo'},\r\n        {id: 1, message: 'Was ist das?'},\r\n        {id: 1, message: 'Willkommen'}\r\n    ],\r\n    dialogs: [\r\n        {id: 1, name: 'George'},\r\n        {id: 2, name: 'Anna'},\r\n        {id: 3, name: 'Nick'},\r\n        {id: 4, name: 'Julia'},\r\n        {id: 5, name: 'Alex'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\nexport default dialogsReducer;","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '18de538a-0af5-4877-87aa-16401c438e9a'\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn(\"Obsolent method. Use profileAPI object\");\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status});\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}","import React from 'react';\r\nimport classes from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <ul>\r\n                <li><NavLink to=\"/profile\" activeClassName={classes.active}>Profile</NavLink></li>\r\n                <li><NavLink to=\"/dialogs\" activeClassName={classes.active}>Messages</NavLink></li>\r\n                <li><NavLink to=\"/users\" activeClassName={classes.active}>Users</NavLink></li>\r\n                <li><NavLink to=\"/news\" activeClassName={classes.active}>News</NavLink></li>\r\n                <li><NavLink to=\"/music\" activeClassName={classes.active}>Music</NavLink></li>\r\n                <li><NavLink to=\"/settings\" activeClassName={classes.active}>Settings</NavLink></li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n\r\n    return items.map(user => {\r\n        if (user[objPropName] === itemId) {\r\n            return {...user, ...newObjProps}\r\n        }\r\n        return user;\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 15,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setUsersTotalCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setUsersTotalCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport classes from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={classes.paginator}>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => {setPortionNumber(portionNumber - 1)}}>PREV</button>}\r\n\r\n            {\r\n                pages\r\n                    .filter(page => page >= leftPortionPageNumber && page <= rightPortionPageNumber)\r\n                    .map(page => {\r\n                        return <span className={ cn({\r\n                            [classes.selectedPage]: currentPage === page\r\n                        }, classes.pageNumber) }\r\n                                     key={page}\r\n                                     onClick={(e) => {\r\n                                         onPageChanged(page);\r\n                                     }}>{page}</span>\r\n                    })}\r\n            { portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;","export default __webpack_public_path__ + \"static/media/userAvatar.e582e4ba.png\";","import React from 'react';\r\nimport classes from \"./Users.module.css\";\r\nimport av1 from \"../../images/userAvatar.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div>\r\n                        <span>\r\n                            <div>\r\n                                <NavLink to={'/profile/' + user.id}>\r\n                                <img src={user.photos.small !== null ? user.photos.small : av1}\r\n                                     className={classes.userPhoto}\r\n                                     width=\"100\" height=\"102\" alt=\"\"/>\r\n                                </NavLink>\r\n                            </div>\r\n                            <div>\r\n                                {user.followed\r\n                                    ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                              onClick={() => {\r\n                                                  unfollow(user.id)\r\n                                              }}\r\n                                    >Unfollow</button>\r\n\r\n                                    : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                              onClick={() => {\r\n                                                  follow(user.id)\r\n                                              }}\r\n                                    >Follow</button>}\r\n                            </div>\r\n                        </span>\r\n            <span>\r\n                            <span>\r\n                                <div>\r\n                                    {user.name}\r\n                                </div>\r\n                                <div>\r\n                                    {user.status}\r\n                                </div>\r\n                            </span>\r\n                            <span>\r\n                                <div>\r\n                                    {'user.location.country'}\r\n                                </div>\r\n                                <div>\r\n                                    {'user.location.city'}\r\n                                </div>\r\n                            </span>\r\n                        </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator.jsx\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={currentPage} totalItemsCount={totalUsersCount}\r\n                       pageSize={pageSize} onPageChanged={onPageChanged}/>\r\n            <div>\r\n            {\r\n                users.map(user => <User\r\n                    user={user}\r\n                    key={user.id}\r\n                    followingInProgress={props.followingInProgress}\r\n                    unfollow={props.unfollow}\r\n                    follow={props.follow} />)\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n    return users.filter(user => true);\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\n\r\n","import {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    requestUsers,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    unfollow\r\n} from \"../../redux/users-reducer\";\r\nimport React from \"react\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getFollowingInProgress, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    //withAuthRedirect,\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers}\r\n    ))(UsersContainer);","export default __webpack_public_path__ + \"static/media/gr.59912a1b.svg\";","import React from 'react';\r\nimport classes from './Header.module.css';\r\nimport logo from '../../images/gr.svg';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <img src={logo} width=\"100\" height=\"75\" alt=\"\" />\r\n            <div className={classes.loginBlock}>\r\n                { props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink> }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'gr-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport classes from \"../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", Input, [required])}\r\n            {createField(\"Password\", \"password\", Input, [required], {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", Input, [], {type: \"checkbox\"}, \"remember me\")}\r\n\r\n            {error && <div className={classes.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n    .then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n}\r\n\r\nexport default appReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)\r\n));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return(\r\n            <React.Suspense fallback={<Preloader />}>\r\n                <Component {...props} />\r\n            </React.Suspense>\r\n        )\r\n    };\r\n}","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {HashRouter, Route, withRouter} from \"react-router-dom\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader />\r\n        }\r\n\r\n        return (\r\n                    <div className='app-wrapper'>\r\n                        <HeaderContainer/>\r\n                        <Navbar/>\r\n                        <div className='app-wrapper-content'>\r\n                            <Route path='/dialogs'\r\n                                   render={withSuspense(DialogsContainer)}/>\r\n\r\n                            <Route path='/profile/:userId?'\r\n                                   render={withSuspense(ProfileContainer)} />\r\n\r\n                            <Route path='/users'\r\n                                   render={() => <UsersContainer/>}/>\r\n\r\n                            <Route path='/login'\r\n                                   render={() => <LoginPage/>}/>\r\n                        </div>\r\n                    </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\nconst GRApp = (props) => {\r\n   return <HashRouter >\r\n        <Provider store={store}>\r\n            <AppContainer />\r\n        </Provider>\r\n    </HashRouter>\r\n}\r\n\r\nexport default GRApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SamuraiJSApp from \"./App\";\r\n\r\nReactDOM.render(<SamuraiJSApp/>, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2XLN_\",\"active\":\"Navbar_active__2cS6t\"};","import React from \"react\";\r\nimport classes from \"./FormsControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={classes.formControl + \" \" + (hasError ? classes.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, component, validators, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name} component={component} validate={validators}\r\n               {...props} />{text}\r\n    </div>\r\n)","export default __webpack_public_path__ + \"static/media/spin.b0ba638e.svg\";","import preloader from \"../../../images/spin.svg\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2IEnN\",\"error\":\"FormsControls_error__3z1Ty\",\"formSummaryError\":\"FormsControls_formSummaryError__mQSYO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2Uoht\",\"pageNumber\":\"Paginator_pageNumber__2z-UL\",\"selectedPage\":\"Paginator_selectedPage__3Z_CM\"};","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1KDWK\",\"loginBlock\":\"Header_loginBlock__2kTNE\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Guten Tag!', likesCount: 15},\r\n        {id: 2, message: 'Das ist mein zweiter Post.', likesCount: 20}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(post => post.id !== action.postId)}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}