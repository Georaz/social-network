{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileData/ProfileData.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileData/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileData/ProfileData.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","images/avatarufo.png","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","classes","myStatusHeading","myStatus","onDoubleClick","autoFocus","onChange","e","currentTarget","value","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","style","formSummaryError","htmlFor","fieldLabel","createField","Input","type","Textarea","Object","keys","contacts","map","key","contact","saveButton","Contact","contactTitle","contactValue","ProfileData","isOwner","goToEditMode","profileData","profileDataItem","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","editButton","onClick","ProfileInfo","savePhoto","saveProfile","Preloader","descriptionWrapper","userProfileHeaderWrapper","userAvatarSection","mainPhotoWrapper","src","photos","large","userPhoto","mainPhoto","alt","mainPhotoUploader","id","target","files","length","mainPhotoUploaderLabel","initialValues","formData","then","Post","post","serviceInfoWrapper","avatar","width","height","likeWrapper","likeButton","like","fill","xmlns","d","stroke","strokeWidth","likesCount","postText","message","maxLength10","maxLengthCreator","AddNewPostFormRedux","Field","textarea","name","component","validate","required","addPostButton","MyPosts","postsElements","posts","photo","postsWrapper","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","React","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.a18ef169.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentHeader\":\"ProfileInfo_contentHeader__3cXen\",\"descriptionWrapper\":\"ProfileInfo_descriptionWrapper__-ZXSP\",\"mainPhoto\":\"ProfileInfo_mainPhoto__1i2M9\",\"contact\":\"ProfileInfo_contact__2Ez3Z\",\"userAvatarSection\":\"ProfileInfo_userAvatarSection__3wsQE\",\"mainPhotoWrapper\":\"ProfileInfo_mainPhotoWrapper__1adlb\",\"mainPhotoUploader\":\"ProfileInfo_mainPhotoUploader__1uYmS\",\"mainPhotoUploaderLabel\":\"ProfileInfo_mainPhotoUploaderLabel__19x2k\",\"userProfileHeaderWrapper\":\"ProfileInfo_userProfileHeaderWrapper__3TG_Z\",\"myStatusHeading\":\"ProfileInfo_myStatusHeading__2S9s8\",\"myStatus\":\"ProfileInfo_myStatus__2Dw_k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ProfileData_contact__2h2cb\",\"profileData\":\"ProfileData_profileData__1nvOE\",\"profileDataItem\":\"ProfileData_profileDataItem__2UT1U\",\"editButton\":\"ProfileData_editButton__3j5iG\",\"saveButton\":\"ProfileData_saveButton__2J1LD\",\"fieldLabel\":\"ProfileData_fieldLabel__1AMKW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsWrapper\":\"MyPosts_postsWrapper__gOSSV\",\"posts\":\"MyPosts_posts__9GMrR\",\"addPostButton\":\"MyPosts_addPostButton__1RNcT\",\"textarea\":\"MyPosts_textarea__3zfXS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1Dldh\",\"likeButton\":\"Post_likeButton__18rGu\",\"likeWrapper\":\"Post_likeWrapper__3YZZV\",\"postText\":\"Post_postText__1p--z\"};","import React, {useEffect, useState} from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n       setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                {!editMode &&\r\n                    <div>\r\n                        <b className={classes.myStatusHeading}>My status:</b><br />\r\n                        <span className={classes.myStatus} onDoubleClick={activateEditMode}>\r\n                            &#8220; {props.status || \"Статус не указан\"} &#8221;\r\n                        </span>\r\n                    </div>\r\n                }\r\n                {editMode &&\r\n                    <div>\r\n                        <input\r\n                            autoFocus={true}\r\n                            onChange={onStatusChange}\r\n                            onBlur={deactivateEditMode}\r\n                            value={status} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport {createField, Input, Textarea} from \"../../../common/FormsControls/FormsControls\";\r\nimport classes from \"./ProfileData.module.css\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from \"../../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div>\r\n            <label htmlFor=\"fullName\" className={classes.fieldLabel}><b>Full name:</b></label>\r\n            {createField(\"Full name\", \"fullName\", Input, [], \"fullName\")}\r\n        </div>\r\n        <div>\r\n            <label htmlFor=\"lookingForAJob\" className={classes.fieldLabel}><b>Looking for a job:</b></label>\r\n            {createField(\"\", \"lookingForAJob\", Input, [], \"lookingForAJob\", {type: \"checkbox\"})}\r\n        </div>\r\n        <div>\r\n            <label htmlFor=\"lookingForAJobDescription\" className={classes.fieldLabel}><b>My professional skills:</b></label>\r\n            {createField(\"My professional skills\", \"lookingForAJobDescription\", Textarea, [], \"lookingForAJobDescription\")}\r\n        </div>\r\n        <div>\r\n            <label htmlFor=\"aboutMe\" className={classes.fieldLabel}><b>About me:</b></label>\r\n            {createField(\"About me\", \"aboutMe\", Textarea, [], \"aboutMe\")}\r\n        </div>\r\n        <div>\r\n            <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={classes.contact}>\r\n                    <b>{key}: {createField(key, \"contacts.\" + key, Input, [])}</b>\r\n                </div>\r\n        })}\r\n        </div>\r\n            <div><button className={classes.saveButton}>Save</button></div>\r\n    </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React from \"react\";\r\nimport classes from \"./ProfileData.module.css\";\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={classes.contact}><b>{contactTitle}:</b> {contactValue}</div>\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return(\r\n        <div className={classes.profileData}>\r\n            <div className={classes.profileDataItem}>\r\n                <b>Full name:</b> {profile.fullName}\r\n            </div>\r\n            <div className={classes.profileDataItem}>\r\n                <b>Looking for a job:</b> {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n            <div className={classes.profileDataItem}>\r\n                <b>My professional skills:</b> {profile.lookingForAJobDescription}\r\n            </div>\r\n            }\r\n            <div className={classes.profileDataItem}>\r\n                <b>About me:</b> {profile.aboutMe}\r\n            </div>\r\n            <div className={classes.profileDataItem}>\r\n                <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n            })}\r\n            </div>\r\n            {isOwner && <div><button className={classes.editButton} onClick={goToEditMode}>Edit</button></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileData;","import React, {useState} from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../images/userAvatar.png\";\r\nimport ProfileDataForm from \"./ProfileData/ProfileDataForm\";\r\nimport ProfileData from \"./ProfileData/ProfileData\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false)\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className={classes.descriptionWrapper}>\r\n                <div className={classes.userProfileHeaderWrapper}>\r\n                    <div className={classes.userAvatarSection}>\r\n                        <div className={classes.mainPhotoWrapper}>\r\n                            <img src={profile.photos.large || userPhoto} className={classes.mainPhoto} alt=\"\"/>\r\n                        </div>\r\n                        {isOwner && <div>\r\n                            <input className={classes.mainPhotoUploader}\r\n                                   type={\"file\"}\r\n                                   id={\"mainPhotoUploader\"}\r\n                                   onChange={onMainPhotoSelected}\r\n                            />\r\n                            <label className={classes.mainPhotoUploaderLabel} htmlFor=\"mainPhotoUploader\">Select\r\n                                photo</label>\r\n                        </div>}\r\n                    </div>\r\n                    <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                </div>\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData goToEditMode={() => {\r\n                        setEditMode(true)\r\n                    }} profile={profile} isOwner={isOwner}/>}\r\n\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","export default __webpack_public_path__ + \"static/media/avatarufo.350e23e2.png\";","import React from 'react';\r\nimport classes from './Post.module.css';\r\nimport avatar from '../../../../images/avatarufo.png';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={classes.post}>\r\n            <div className={classes.serviceInfoWrapper}>\r\n            <img src={props.photos || avatar} width=\"60\" height=\"60\" alt=\"\"/>\r\n            <div className={classes.likeWrapper}>\r\n                <button className={classes.likeButton}>\r\n                    <svg className={classes.like} width=\"21\" height=\"18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path\r\n                            d=\"M19.969 5.771c-.278-2.765-2.438-4.77-5.142-4.77-1.802 0-3.451.877-4.38 2.285C9.527 1.86 7.947 1 6.173 1 3.47 1 1.31 3.006 1.032 5.77c-.022.123-.112.766.161 1.814.394 1.511 1.304 2.887 2.63 3.975L10.444 17l6.733-5.44c1.327-1.09 2.237-2.464 2.63-3.976.274-1.048.184-1.69.163-1.813zm-.874 1.661c-.36 1.38-1.193 2.639-2.408 3.636l-6.24 5.042-6.132-5.041c-1.217-.999-2.05-2.256-2.41-3.637-.259-.992-.153-1.552-.152-1.556l.005-.033c.238-2.423 2.094-4.181 4.415-4.181 1.713 0 3.22.953 3.936 2.487l.337.723.336-.723c.704-1.51 2.292-2.487 4.045-2.487 2.32 0 4.178 1.759 4.42 4.212 0 .006.107.566-.152 1.558z\"\r\n                            fill=\"#fff\" stroke=\"#fff\" strokeWidth=\".75\"/>\r\n                    </svg>\r\n                </button>\r\n                {props.likesCount}\r\n            </div>\r\n            </div>\r\n            <div className={classes.postText}>\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postsElements = props.posts.map(post => <Post key={post.id}\r\n                                                      message={post.message}\r\n                                                      likesCount={post.likesCount}\r\n                                                      id={post.id}\r\n                                                      photo={post.photos}\r\n    />);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.postsWrapper}>\r\n            <h2>My posts</h2>\r\n                <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            <div className={classes.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field className={classes.textarea} name=\"newPostText\" component={Textarea} validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button className={classes.addPostButton}>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n        photo: state.profilePage.photos\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                savePhoto={props.savePhoto}\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                saveProfile={props.saveProfile}\r\n                updateStatus={props.updateStatus}\r\n            />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}