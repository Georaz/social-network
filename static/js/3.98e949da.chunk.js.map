{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","classes","dialog","to","activeClassName","active","name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","messagesPage","dialogsElements","dialogs","map","messagesElements","messages","newMessageBody","isAuth","dialogsItems","values","sendMessage","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,4B,oBCA7GD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,6B,oBCA/DD,EAAOC,QAAU,CAAC,QAAU,2B,wHCYbC,EATI,SAACC,GAChB,IAAIC,EAAI,mBAAeD,EAAME,IAC7B,OACI,qBAAKC,UAAWC,IAAQC,OAAxB,SACI,cAAC,IAAD,CAASC,GAAIL,EAAMM,gBAAiBH,IAAQI,OAA5C,SAAqDR,EAAMS,U,kBCCxDC,EANC,SAACV,GACb,OACI,qBAAKG,UAAWC,IAAQO,QAAxB,SAAkCX,EAAMW,W,yCCA1CC,EAAcC,YAAiB,IAkBtBC,cAAU,CAACC,KAAM,wBAAjBD,EAhBQ,SAACd,GACpB,OACI,uBAAMgB,SAAUhB,EAAMiB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUV,GACrBH,KAAK,iBACLc,YAAY,yBAEvB,8BACI,kDCmBDC,EA7BC,SAACxB,GAEb,IAAIyB,EAAQzB,EAAM0B,aAEdC,EAAkBF,EAAMG,QAAQC,KAAK,SAAAxB,GAAM,OAAI,cAAC,EAAD,CAAYI,KAAMJ,EAAOI,KAAsBP,GAAIG,EAAOH,IAAtBG,EAAOH,OAC1F4B,EAAmBL,EAAMM,SAASF,KAAK,SAAAlB,GAAO,OAAI,cAAC,EAAD,CAASA,QAASA,EAAQA,QAA0BT,GAAIS,EAAQT,IAAxBS,EAAQT,OACjFuB,EAAMO,eAM3B,OAAKhC,EAAMiC,OAGR,8BACI,sBAAK9B,UAAWC,IAAQwB,QAAxB,UACI,qBAAKzB,UAAWC,IAAQ8B,aAAxB,SACKP,IAEL,sBAAKxB,UAAWC,IAAQ2B,SAAxB,UACI,8BAAMD,IACN,cAAC,EAAD,CAAgBd,SAdX,SAACmB,GACjBnC,EAAMoC,YAAYD,EAAOH,2BAGH,cAAC,IAAD,CAAU1B,GAAI,Y,+CCfxC+B,EAA6B,SAACZ,GAAD,MAAY,CACzCQ,OAAQR,EAAMa,KAAKL,S,QCeRM,sBAAQC,aAdD,SAACf,GACnB,MAAO,CACHC,aAAcD,EAAMC,iBAIH,SAACe,GACtB,MAAO,CACHL,YAAa,SAACJ,GACVS,EAASC,YAAmBV,UDPR,SAACW,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAKC,KAAK7C,MAAMiC,OACT,cAACU,EAAD,eAAeE,KAAK7C,QADI,cAAC,IAAD,CAAUM,GAAI,eAHV,GACXwC,IAAMH,WAStC,OAFqCH,YAAQH,EAARG,CAAoCI,KCI9DL,CAAwEf","file":"static/js/3.98e949da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__p6-jD\",\"dialogsItems\":\"Dialogs_dialogsItems__2RO4y\",\"messages\":\"Dialogs_messages__3hWiF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__vDdHb\",\"active\":\"DialogItem_active__W8jeH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2JKLd\"};","import React from 'react';\r\nimport classes from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = `/dialogs/${props.id}`;\r\n    return (\r\n        <div className={classes.dialog}>\r\n            <NavLink to={path} activeClassName={classes.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength50]}\r\n                       name=\"newMessageBody\"\r\n                       placeholder=\"Enter your message\" />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.messagesPage;\r\n\r\n    let dialogsElements = state.dialogs.map( dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} /> );\r\n    let messagesElements = state.messages.map( message => <Message message={message.message} key={message.id} id={message.id} />);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'} />;\r\n\r\n    return (\r\n       <div>\r\n           <div className={classes.dialogs}>\r\n               <div className={classes.dialogsItems}>\r\n                   {dialogsElements}\r\n               </div>\r\n               <div className={classes.messages}>\r\n                   <div>{messagesElements}</div>\r\n                   <AddMessageForm onSubmit={addNewMessage} />\r\n               </div>\r\n           </div>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);"],"sourceRoot":""}